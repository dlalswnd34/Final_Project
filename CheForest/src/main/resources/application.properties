# ===============================
# \u2705 Spring \uAE30\uBCF8 \uC124\uC815
# ===============================
spring.application.name=CheForest

# \uC11C\uBC84 \uC790\uB3D9 \uC7AC\uC2DC\uC791 \uBC29\uC9C0 (\uC6B4\uC601 \uD658\uACBD)
spring.devtools.restart.enabled=false
server.servlet.session.persistent=false

# JSP \uC124\uC815
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

# ===============================
# \u2705 \uB85C\uADF8 \uC124\uC815
# ===============================
# \uBD88\uD544\uC694\uD55C DEBUG \uB85C\uADF8 \uC81C\uAC70
logging.level.com.simplecoding.cheforest.jpa.admin.controller.PingController=WARN
logging.level.org.springframework.security.web=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.orm.jdbc.bind=TRACE

# ===============================
# \u2705 \uB370\uC774\uD130\uBCA0\uC774\uC2A4 (Oracle)
# ===============================
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@${DB_HOST:localhost}:${DB_PORT:1521}:${DB_NAME:xe}
spring.datasource.username=${DB_USER:cook}
spring.datasource.password=${DB_PASS:1234567890}

# JPA \uC124\uC815
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.format_sql=true

# ===============================
# \u2705 Elasticsearch
# ===============================
spring.elasticsearch.uris=${ELASTIC_URI:http://localhost:9200}

# ===============================
# \u2705 \uD30C\uC77C \uC5C5\uB85C\uB4DC \uC124\uC815
# ===============================
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
file.upload-dir=/home/ubuntu/cheforest/uploads

# ===============================
# \u2705 \uBA54\uC2DC\uC9C0 / \uC5D0\uB7EC\uBA54\uC2DC\uC9C0
# ===============================
spring.messages.basename=messages
spring.messages.encoding=UTF-8

# ===============================
# \u2705 \uBA54\uC77C (Gmail SMTP)
# ===============================
spring.mail.host=smtp.gmail.com
spring.mail.port=465
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.properties.mail.debug=true

# ===============================
# \u2705 OAuth2 Social Login
# ===============================

## Google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.google.scope=profile,email

## Naver
spring.security.oauth2.client.registration.naver.client-id=${NAVER_CLIENT_ID}
spring.security.oauth2.client.registration.naver.client-secret=${NAVER_CLIENT_SECRET}
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.naver.client-name=Naver
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

## Kakao
spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_CLIENT_ID}
spring.security.oauth2.client.registration.kakao.client-secret=${KAKAO_CLIENT_SECRET}
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.client-name=Kakao
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# ===============================
# \u2705 \uC678\uBD80 API Key (DeepL, Spoonacular, \uACF5\uACF5\uB370\uC774\uD130 \uB4F1)
# ===============================
deepl.api.url=https://api-free.deepl.com/v2/translate
deepl.api.key=${DEEPL_API_KEY}
spoonacular.api.key=${SPOONACULAR_API_KEY}
datako.api.key=${DATAKO_API_KEY}
api.air.service-key=${API_AIR_SERVICE_KEY}
api.air.base-url=http://apis.data.go.kr/B552584/ArpltnInforInqireSvc/getCtprvnRltmMesureDnsty
api.weather.base-url=https://apis.data.go.kr/1360000/VilageFcstInfoService_2.0/getVilageFcst

# ===============================
# \u2705 \uC774\uBBF8\uC9C0 \uCE90\uC2F1 \uACBD\uB85C
# ===============================
recipe.image.root-path=${IMAGE_PATH:/home/ubuntu/cheforest/images/}

# ===============================
# \u2705 \uC790\uB3D9 \uAD6C\uC131 \uC81C\uC678 (\uBCF4\uC548 \uAD00\uB828)
# ===============================
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
