plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '3.4.9'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.simplecoding'
version = '0.0.1-SNAPSHOT'
description = 'CheForest'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // 레시피 api 호출 관련
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // TODO: DTO 유효성 검사(@Valid, @NotBlank 등) 추가
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    // TODO: 오라클 jdbc 드라이버는 최신 버전 명시 권장 (23.3.0.23.09)
    runtimeOnly 'com.oracle.database.jdbc:ojdbc11:23.3.0.23.09'
    annotationProcessor 'org.projectlombok:lombok'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // TODO: junit 테스트 시 lombok 추가
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok'

    // ✅ JSP 렌더링 설정 (추가됨)
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:3.0.0'
    implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl:3.0.1'
    implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'  // ✅ ← 이 한 줄 추가

    // DTO , Entity 변환 라이브러리 (롬복보다 밑에 위치해야 정상작동)
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    // 메일 발송용
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // QueryDSL Jakarta 의존성 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-taglibs'
    // 소셜 로그인을 위한 OAuth2 Client
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // Elasticsearch
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'

    // 웹소캣
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.security:spring-security-messaging'

    // .env 파일용
    implementation 'me.paulschwarz:spring-dotenv:3.0.0'
}

def generated = "$buildDir/generated/sources/annotationProcessor/java/main"

sourceSets {
    main.java.srcDirs += [generated]
}

tasks.named('test') {
    useJUnitPlatform()
}
